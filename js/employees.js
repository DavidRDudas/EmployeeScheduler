window.employees||(window.employees=JSON.parse(localStorage.getItem("employees"))||{}),window.addEmployee=function(){const e=document.getElementById("employeeId").value,t=document.getElementById("employeeName").value,n=document.getElementById("employeeRole").value,o=document.getElementById("employeeMarket").value,d=document.getElementById("employeeEmail").value,l=document.getElementById("employeeColor").value||"#"+Math.floor(16777215*Math.random()).toString(16);e&&t&&n&&o&&d?window.employees[e]?alert("Employee ID already exists"):(window.employees[e]={name:t,role:n,market:o,email:d,color:l,active:!0,dateAdded:(new Date).toISOString()},window.saveData(),window.renderEmployees(),document.getElementById("employeeId").value="",document.getElementById("employeeName").value="",document.getElementById("employeeRole").value="",document.getElementById("employeeMarket").value="",document.getElementById("employeeEmail").value="",document.getElementById("employeeColor").value=""):alert("Please fill in all fields")},window.renderEmployees=function(){const e=document.getElementById("employees-grid");e.innerHTML="",Object.entries(window.employees).forEach((([t,n])=>{const o=document.createElement("div");o.className="employee-item "+(n.active?"":"inactive"),o.style.borderLeftColor=n.color||"#4CAF50",o.innerHTML=`\n            <div class="employee-header">\n                <h4>${n.name}</h4>\n                <div class="employee-color" style="background-color: ${n.color||"#4CAF50"}"></div>\n            </div>\n            <div class="employee-details">\n                <p><strong>ID:</strong> ${t}</p>\n                <p><strong>Role:</strong> ${n.role}</p>\n                <p><strong>Market:</strong> ${n.market}</p>\n                <p><strong>Email:</strong> ${n.email}</p>\n                <p><strong>Status:</strong> ${n.active?"Active":"Inactive"}</p>\n            </div>\n            <div class="employee-actions">\n                <button onclick="window.editEmployee('${t}')" class="edit-btn">Edit</button>\n                <button onclick="window.deleteEmployee('${t}')" class="delete-btn">Delete</button>\n                <button onclick="window.viewEmployeeSchedule('${t}')" class="schedule-btn">View Schedule</button>\n                <button onclick="window.toggleEmployeeStatus('${t}')" class="status-btn ${n.active?"deactivate":"activate"}">\n                    ${n.active?"Deactivate":"Activate"}\n                </button>\n            </div>\n        `,e.appendChild(o)}))};let currentEditId=null;window.editEmployee=function(e){const t=window.employees[e];if(!t)return;const n=document.getElementById("editEmployeeModal");n.style.display="flex",currentEditId=e,document.getElementById("editEmployeeId").value=e,document.getElementById("editName").value=t.name,document.getElementById("editRole").value=t.role,document.getElementById("editMarket").value=t.market,document.getElementById("editEmail").value=t.email,document.getElementById("editColor").value=t.color||"#cccccc";const o=document.getElementById("saveEmployeeEdit");o.replaceWith(o.cloneNode(!0)),document.getElementById("saveEmployeeEdit").onclick=function(){const e=document.getElementById("editEmployeeId").value,t=document.getElementById("editName").value,o=document.getElementById("editRole").value,d=document.getElementById("editMarket").value,l=document.getElementById("editEmail").value,a=document.getElementById("editColor").value;if(!(e&&t&&o&&d&&l))return void alert("Please fill in all fields");if(e!==currentEditId&&window.employees[e])return alert("An employee with this ID already exists"),void(document.getElementById("editEmployeeId").value=currentEditId);const i=window.employees[currentEditId].name,r={name:t,role:o,market:d,email:l,color:a,active:window.employees[currentEditId].active,dateAdded:window.employees[currentEditId].dateAdded};e===currentEditId&&t===i||(window.scheduleData&&window.scheduleData.forEach((e=>{e.employee===i&&(e.employee=t)})),e!==currentEditId&&delete window.employees[currentEditId]),window.employees[e]=r,window.saveData(),window.renderEmployees(),"function"==typeof window.renderCalendar&&window.renderCalendar(),n.style.display="none"};n.querySelector(".close-modal").onclick=()=>n.style.display="none";n.querySelector(".cancel-btn").onclick=()=>n.style.display="none",n.onclick=e=>{e.target===n&&(n.style.display="none")}},window.toggleEmployeeStatus=function(e){const t=window.employees[e];t&&(t.active=!t.active,window.saveData(),window.renderEmployees())},window.viewEmployeeSchedule=function(e){const t=window.employees[e];if(!t)return;const n=window.scheduleData?window.scheduleData.filter((e=>e.employee===t.name)):[],o=n.reduce(((e,t)=>{const n=t.projectId,o=new Date(t.startDate+"T12:00:00"),d=new Date(t.endDate+"T12:00:00"),l=Math.ceil((d-o)/864e5)+1;return e[n]||(e[n]={name:window.projects[n]?.name||"Unknown Project",days:0}),e[n].days+=l,e}),{}),d=document.createElement("div");d.className="modal",d.style.display="flex",d.innerHTML=`\n        <div class="modal-content">\n            <div class="modal-header">\n                <h3>Schedule: ${t.name}</h3>\n                <span class="close-modal">&times;</span>\n            </div>\n            <div class="modal-body">\n                <h4>Employee Details</h4>\n                <p><strong>ID:</strong> ${e}</p>\n                <p><strong>Role:</strong> ${t.role}</p>\n                <p><strong>Market:</strong> ${t.market}</p>\n                <p><strong>Email:</strong> ${t.email}</p>\n                \n                <h4>Project Time Summary</h4>\n                <ul>\n                    ${Object.entries(o).map((([e,{name:t,days:n}])=>`\n                        <li>${t}: ${n} days</li>\n                    `)).join("")}\n                </ul>\n                \n                <h4>Assignments (${n.length})</h4>\n                ${n.length>0?`\n                    <table class="assignments-table">\n                        <thead>\n                            <tr>\n                                <th>Date Range</th>\n                                <th>Project</th>\n                                <th>Market PM</th>\n                                <th>Type</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            ${n.map((e=>`\n                                <tr>\n                                    <td>${new Date(e.startDate).toLocaleDateString()} - ${new Date(e.endDate).toLocaleDateString()}</td>\n                                    <td>${window.projects[e.projectId]?.name||"Unknown Project"}</td>\n                                    <td>${e.marketProjectManager}</td>\n                                    <td>${e.entryType}</td>\n                                    <td>\n                                        <button class="delete-assignment-btn" \n                                                data-start="${e.startDate}" \n                                                data-end="${e.endDate}"\n                                                data-project="${e.projectId}">\n                                            Delete\n                                        </button>\n                                    </td>\n                                </tr>\n                            `)).join("")}\n                        </tbody>\n                    </table>\n                `:"<p>No assignments found for this employee</p>"}\n            </div>\n        </div>\n    `,document.body.appendChild(d);d.querySelectorAll(".delete-assignment-btn").forEach((n=>{n.addEventListener("click",(function(){const n=this.getAttribute("data-start"),o=this.getAttribute("data-end"),l=this.getAttribute("data-project");if(confirm("Are you sure you want to delete this assignment?")){const a=window.scheduleData.findIndex((e=>e.employee===t.name&&e.startDate===n&&e.endDate===o&&e.projectId===l));-1!==a&&(window.scheduleData.splice(a,1),window.saveData(),window.renderCalendar(),d.remove(),window.viewEmployeeSchedule(e))}}))}));d.querySelector(".close-modal").addEventListener("click",(()=>d.remove())),d.addEventListener("click",(e=>{e.target===d&&d.remove()}))},window.filterEmployees=function(){const e=document.getElementById("searchEmployeeInput").value.toLowerCase();document.querySelectorAll(".employee-item").forEach((t=>{const n=t.querySelector("h4").textContent.toLowerCase(),o=t.querySelector("p:nth-child(2)").textContent.toLowerCase(),d=t.querySelector("p:nth-child(3)").textContent.toLowerCase();n.includes(e)||o.includes(e)||d.includes(e)?t.style.display="":t.style.display="none"}))};let currentSort={field:null,direction:"asc"};function setupMarketSearchField(e){if(!e)return;const t=document.createElement("div");t.id=`${e.id}-search-results`,t.className="search-results-dropdown",e.parentNode.appendChild(t),e.addEventListener("input",(function(n){const o=n.target.value.toLowerCase();if(!o)return t.innerHTML="",void t.classList.remove("active");const d=window.markets.filter((e=>e.name.toLowerCase().includes(o)||e.region.toLowerCase().includes(o))).slice(0,5);d.length>0?(t.innerHTML=d.map((t=>`\n                    <div class="search-result-item" onclick="window.selectMarket('${t.name}', '${e.id}')">\n                        <div>${t.name}</div>\n                        <div class="market-details">${t.region}</div>\n                    </div>\n                `)).join(""),t.classList.add("active")):(t.innerHTML='<div class="search-result-item">No matching markets found</div>',t.classList.add("active"))})),document.addEventListener("click",(function(n){e.contains(n.target)||t.contains(n.target)||t.classList.remove("active")}))}window.sortEmployees=function(e){const t=document.getElementById("employees-grid"),n=Array.from(t.children);currentSort.field===e?currentSort.direction="asc"===currentSort.direction?"desc":"asc":(currentSort.field=e,currentSort.direction="asc"),document.querySelectorAll(".sort-btn").forEach((t=>{const n=t.querySelector(".sort-icon");t.dataset.sort===e?n.innerHTML="asc"===currentSort.direction?"&uarr;":"&darr;":n.innerHTML="&updownarrow;"})),n.sort(((t,n)=>{let o,d;switch(e){case"name":o=t.querySelector("h4").textContent,d=n.querySelector("h4").textContent;break;case"market":o=t.querySelector("p:nth-child(2)").textContent.split(":")[1].trim(),d=n.querySelector("p:nth-child(2)").textContent.split(":")[1].trim();break;case"role":o=t.querySelector("p:nth-child(1)").textContent.split(":")[1].trim(),d=n.querySelector("p:nth-child(1)").textContent.split(":")[1].trim()}return"asc"===currentSort.direction?o.localeCompare(d):d.localeCompare(o)})),t.innerHTML="",n.forEach((e=>t.appendChild(e)))},window.initializePage=function(){window.renderEmployees();const e=document.getElementById("ptoColor");e&&(e.value=window.getPTOColor())},window.deleteEmployee=function(e){const t=window.employees[e];t&&confirm("Are you sure you want to delete this employee? This will also delete all their assignments.")&&(window.scheduleData=window.scheduleData.filter((e=>e.employee!==t.name)),delete window.employees[e],window.saveData(),window.renderEmployees(),window.renderCalendar())},window.savePTOColor=function(){const e=document.getElementById("ptoColor").value;if(!e)return;localStorage.setItem("ptoColor",e);document.querySelectorAll('.assignment[data-type="pto"]').forEach((t=>{t.style.backgroundColor=e;const n=parseInt(e.slice(1),16),o=.299*(n>>16&255)+.587*(n>>8&255)+.114*(255&n);t.style.color=o>186?"#000000":"#FFFFFF"})),window.dispatchEvent(new Event("ptoColorChanged")),alert("PTO color saved successfully!")},window.getPTOColor=function(){return localStorage.getItem("ptoColor")||"#ffcdd2"},window.setupMarketSearch=function(){const e=document.getElementById("employeeMarket"),t=document.getElementById("editMarket");setupMarketSearchField(e),setupMarketSearchField(t)},window.selectMarket=function(e,t){document.getElementById(t).value=e,document.getElementById(`${t}-search-results`).classList.remove("active")},window.setupEmployeeSearch=function(){const e=document.getElementById("employee");if(!e)return;const t=document.getElementById("employee-search-results");t&&(e.addEventListener("input",(function(e){const n=e.target.value.toLowerCase();if(!n)return t.innerHTML="",void t.classList.remove("active");const o=Object.values(window.employees).filter((e=>e.active&&(e.name.toLowerCase().includes(n)||e.role.toLowerCase().includes(n)||e.market.toLowerCase().includes(n)))).slice(0,5);o.length>0?(t.innerHTML=o.map((e=>`\n                    <div class="search-result-item" onclick="window.selectEmployee('${e.name}', 'employee')">\n                        <div>${e.name}</div>\n                        <div class="employee-details">Role: ${e.role} | Market: ${e.market}</div>\n                    </div>\n                `)).join(""),t.classList.add("active")):(t.innerHTML='<div class="search-result-item">No matching employees found</div>',t.classList.add("active"))})),document.addEventListener("click",(function(n){e.contains(n.target)||t.contains(n.target)||t.classList.remove("active")})))},window.selectEmployee=function(e,t){document.getElementById(t).value=e,document.getElementById(`${t}-search-results`).classList.remove("active")},document.addEventListener("DOMContentLoaded",(function(){const e=document.getElementById("editEmployeeModal");if(!e)return;const t=e.querySelector(".close-modal");t&&t.addEventListener("click",(function(){e.classList.remove("show")}));const n=e.querySelector(".cancel-btn");n&&n.addEventListener("click",(function(){e.classList.remove("show")})),window.addEventListener("click",(function(t){t.target===e&&e.classList.remove("show")}));const o=document.getElementById("saveEmployeeEdit");o&&o.addEventListener("click",(function(){const t=document.getElementById("editEmployeeId").value,n=document.getElementById("editName").value,o=document.getElementById("editRole").value,d=document.getElementById("editMarket").value,l=document.getElementById("editEmail").value,a=document.getElementById("editColor").value;if(!(t&&n&&o&&d&&l))return void alert("Please fill in all fields");if(t!==currentEditId&&window.employees[t])return alert("An employee with this ID already exists"),void(document.getElementById("editEmployeeId").value=currentEditId);const i=window.employees[currentEditId].name,r={name:n,role:o,market:d,email:l,color:a,active:window.employees[currentEditId].active,dateAdded:window.employees[currentEditId].dateAdded};t===currentEditId&&n===i||(window.scheduleData&&window.scheduleData.forEach((e=>{e.employee===i&&(e.employee=n)})),t!==currentEditId&&delete window.employees[currentEditId]),window.employees[t]=r,window.saveData(),window.renderEmployees(),window.renderCalendar(),e.classList.remove("show")})),window.setupMarketSearch(),window.setupEmployeeSearch(),window.renderEmployees()}));
