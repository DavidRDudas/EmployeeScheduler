function showSearchResultsModal(e,t=[],n=[]){const a=document.createElement("div");a.className="modal",a.style.display="flex";let o=`\n        <div class="modal-content">\n            <div class="modal-header">\n                <h3>${e}</h3>\n                <span class="close-modal">&times;</span>\n            </div>\n            <div class="modal-body">`;"string"!=typeof e||t.length||n.length?(t.length>0&&(o+=`\n                <h4>Visible Assignments (Current Month)</h4>\n                <table class="assignments-table">\n                    <thead>\n                        <tr>\n                            <th>Date Range</th>\n                            <th>Employee</th>\n                            <th>Project</th>\n                            <th>Market</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        ${t.map((e=>`\n                            <tr>\n                                <td>${e.date}</td>\n                                <td>${e.employee}</td>\n                                <td>${e.project}</td>\n                                <td>${e.market}</td>\n                            </tr>\n                        `)).join("")}\n                    </tbody>\n                </table>`),n.length>0&&(o+=`\n                <h4>Other Matching Assignments</h4>\n                <table class="assignments-table">\n                    <thead>\n                        <tr>\n                            <th>Date Range</th>\n                            <th>Employee</th>\n                            <th>Project</th>\n                            <th>Market</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        ${n.map((e=>`\n                            <tr>\n                                <td>${e.date}</td>\n                                <td>${e.employee}</td>\n                                <td>${e.project}</td>\n                                <td>${e.market}</td>\n                            </tr>\n                        `)).join("")}\n                    </tbody>\n                </table>`)):o+=`<p>${e}</p>`,o+="\n            </div>\n        </div>",a.innerHTML=o,document.body.appendChild(a);a.querySelector(".close-modal").addEventListener("click",(()=>a.remove())),a.addEventListener("click",(e=>{e.target===a&&a.remove()}))}function renderAssignment(e,t){const n=Object.values(window.employees).find((t=>t.name===e.employee));if(!n||!n.active)return;const a=window.projects[e.projectId],o=document.createElement("div");o.className="assignment",o.dataset.employee=e.employee,o.dataset.projectId=e.projectId,o.dataset.projectName=a?a.name:"Unknown Project",o.dataset.market=a?a.market:"",o.dataset.startDate=e.startDate,o.dataset.endDate=e.endDate,o.dataset.type=e.entryType||"work";const s=new Date(window.currentDate.getFullYear(),window.currentDate.getMonth(),parseInt(t.querySelector(".date-label").textContent),12,0,0),d=new Date(e.startDate+"T12:00:00"),l=new Date(e.endDate+"T12:00:00"),r=s.getTime()===d.getTime(),i=s.getTime()===l.getTime(),c=!r&&!i&&s>=d&&s<=l,m=window.getContinuousBlocks();if(m&&(r&&o.classList.add("assignment-start"),c&&o.classList.add("assignment-middle"),i&&o.classList.add("assignment-end")),e.entryType&&"pto"===e.entryType.toLowerCase()){const t=window.getPTOColor();o.classList.add("pto"),o.style.cssText=`\n            background-color: ${t} !important;\n            border-color: ${t} !important;\n        `,o.innerHTML=m?r?`\n                    <span class="start-icon"></span>\n                    <span class="assignment-text">${e.employee} - PTO</span>\n                `:i?`\n                    <span class="assignment-text">${e.employee} - PTO (END)</span>\n                    <span class="end-icon"></span>\n                `:'<span class="assignment-text"></span>':`${e.employee} - PTO`}else{let t="project"===window.getColorPreference()&&a?.color?a.color:n.color||"#4CAF50";o.style.backgroundColor=t,o.innerHTML=m?r?`\n                    <span class="start-icon"></span>\n                    <span class="assignment-text">${e.employee} - ${a?a.name:"Unknown Project"}</span>\n                `:i?`\n                    <span class="assignment-text">${e.employee} - ${a?a.name:"Unknown Project"} (END)</span>\n                    <span class="end-icon"></span>\n                `:'<span class="assignment-text"></span>':`${e.employee} - ${a?a.name:"Unknown Project"}`}const u=o.style.backgroundColor,w=parseInt(u.replace("#",""),16),p=.299*(w>>16&255)+.587*(w>>8&255)+.114*(255&w);o.style.color=p>186?"#000000":"#FFFFFF",o.addEventListener("click",(()=>showAssignmentDetails(e))),t.appendChild(o)}function setupSearchField(e,t){const n=document.getElementById(`search${e.charAt(0).toUpperCase()+e.slice(1)}`),a=document.getElementById(`${e}-search-results`);n&&a&&(n.addEventListener("input",(function(n){const o=n.target.value.toLowerCase();if(!o)return a.innerHTML="",void a.classList.remove("active");const s=t().filter((e=>e.searchTerms&&e.searchTerms.includes(o)||e.name.toLowerCase().includes(o)||e.details.toLowerCase().includes(o))).slice(0,5);s.length>0?(a.innerHTML=s.map((t=>`\n                    <div class="search-result-item" onclick="window.selectSearchItem('${t.id}', '${e}')">\n                        <div>${t.name}</div>\n                        <div class="search-result-details">${t.details}</div>\n                    </div>\n                `)).join(""),a.classList.add("active")):(a.innerHTML='<div class="search-result-item">No matches found</div>',a.classList.add("active"))})),document.addEventListener("click",(function(e){n.contains(e.target)||a.contains(e.target)||a.classList.remove("active")})))}window.currentDate=new Date,window.addEventListener("ptoColorChanged",(function(){window.renderCalendar()})),window.renderCalendar=function(){const e=document.getElementById("calendar");if(!e)return void console.error("Calendar element not found");e.innerHTML="";["Sun","Mon","Tue","Wed","Thu","Fri","Sat"].forEach((t=>{const n=document.createElement("div");n.className="calendar-header",n.textContent=t,e.appendChild(n)}));const t=new Date(window.currentDate.getFullYear(),window.currentDate.getMonth(),1),n=new Date(window.currentDate.getFullYear(),window.currentDate.getMonth()+1,0);for(let n=0;n<t.getDay();n++){const t=document.createElement("div");t.className="calendar-day empty-day",e.appendChild(t)}for(let t=1;t<=n.getDate();t++){const n=document.createElement("div");n.className="calendar-day";const a=document.createElement("div");a.className="date-label",a.textContent=t,n.appendChild(a);const o=new Date(window.currentDate.getFullYear(),window.currentDate.getMonth(),t,12,0,0);window.scheduleData.forEach((e=>{const t=new Date(e.startDate+"T12:00:00"),a=new Date(e.endDate+"T12:00:00"),s=new Date(o.getFullYear(),o.getMonth(),o.getDate(),12,0,0);s>=t&&s<=a&&renderAssignment(e,n)})),e.appendChild(n)}const a=document.getElementById("currentMonth");a&&(a.textContent=window.currentDate.toLocaleDateString("default",{month:"long",year:"numeric"}))},window.updateMonthDisplay=function(){const e=document.getElementById("currentMonth");e&&(e.textContent=window.currentDate.toLocaleString("default",{month:"long",year:"numeric"}))},window.previousMonth=function(){window.currentDate.setMonth(window.currentDate.getMonth()-1),document.getElementById("monthSelect").value=window.currentDate.getMonth(),document.getElementById("yearSelect").value=window.currentDate.getFullYear(),window.renderCalendar()},window.nextMonth=function(){window.currentDate.setMonth(window.currentDate.getMonth()+1),document.getElementById("monthSelect").value=window.currentDate.getMonth(),document.getElementById("yearSelect").value=window.currentDate.getFullYear(),window.renderCalendar()},window.addEntry=function(){const e=document.getElementById("date").value,t=document.getElementById("employee").value,n=document.getElementById("projectId").value,a=document.getElementById("estimatedTime").value,o=document.getElementById("marketProjectManager").value,s=document.getElementById("entryType").value;if(e&&t&&n&&a&&o){if("pto"===s){window.scheduleData.filter((n=>n.date===e&&n.employee===t&&"work"===n.entryType)).length>0&&alert("Warning: This employee is assigned to projects on this date!")}window.scheduleData.push({date:e,employee:t,projectId:n,projectName:window.projects[n]?.name||"Unknown Project",estimatedTime:a,marketProjectManager:o,entryType:s}),window.saveData(),window.renderCalendar()}else alert("Please fill in all fields")},window.initializePage=function(){window.setupSearchFields(),window.initializeMonthYearSelectors(),window.renderCalendar()},window.searchSchedule=function(){const e=document.getElementById("searchEmployee").value,t=document.getElementById("searchProject").value,n=document.getElementById("searchMarket").value,a=document.getElementById("searchStartDate").value,o=document.getElementById("searchEndDate").value,s=document.getElementById("searchEntryType").value;if(!(e||t||n||a||o||s))return;document.querySelectorAll(".assignment").forEach((e=>{e.classList.remove("highlighted")}));const d=[],l=[];window.scheduleData.forEach((r=>{if((d=>{const l=window.projects[d.projectId],r=!e||d.employee.toLowerCase().includes(e.toLowerCase()),i=!t||l&&l.name.toLowerCase().includes(t.toLowerCase()),c=!n||l&&l.market.toLowerCase().includes(n.toLowerCase()),m=!s||d.entryType===s,u=new Date(d.startDate+"T12:00:00"),w=new Date(d.endDate+"T12:00:00"),p=a?new Date(a+"T12:00:00"):null,g=o?new Date(o+"T12:00:00"):null;return r&&i&&c&&(!p||w>=p)&&(!g||u<=g)&&m})(r)){const e=new Date(r.startDate+"T12:00:00"),t=new Date(r.endDate+"T12:00:00"),n=window.currentDate.getMonth(),a=window.currentDate.getFullYear();e.getMonth()===n&&e.getFullYear()===a?(d.push({date:`${e.toLocaleDateString()} - ${t.toLocaleDateString()}`,employee:r.employee,project:window.projects[r.projectId]?.name||"Unknown Project",market:window.projects[r.projectId]?.market||"N/A"}),document.querySelectorAll(".assignment").forEach((e=>{const t=e.dataset.employee===r.employee,n=e.dataset.projectId===r.projectId,a=new Date(e.dataset.startDate+"T12:00:00"),o=new Date(e.dataset.endDate+"T12:00:00");t&&n&&a.getTime()===new Date(r.startDate+"T12:00:00").getTime()&&o.getTime()===new Date(r.endDate+"T12:00:00").getTime()&&e.classList.add("highlighted")}))):l.push({date:`${e.toLocaleDateString()} - ${t.toLocaleDateString()}`,employee:r.employee,project:window.projects[r.projectId]?.name||"Unknown Project",market:window.projects[r.projectId]?.market||"N/A"})}})),0===d.length&&0===l.length?showSearchResultsModal("No matching assignments found"):l.length>0&&showSearchResultsModal("Search Results",d,l)},window.findAvailableUsers=function(){const e=document.getElementById("searchStartDate").value,t=document.getElementById("searchEndDate").value;if(!e||!t)return void alert("Please select both start and end dates to find available users");const n=new Date(e+"T12:00:00"),a=new Date(t+"T12:00:00"),o=[];let s=new Date(n);for(;s<=a;)o.push(s.toISOString().split("T")[0]),s.setDate(s.getDate()+1);const d=Object.values(window.employees).filter((e=>e.active)).map((e=>{const t=new Set(window.scheduleData.filter((t=>t.employee===e.name)).flatMap((e=>{const t=new Date(e.startDate+"T12:00:00"),n=new Date(e.endDate+"T12:00:00"),a=[];let o=new Date(t);for(;o<=n;)a.push(o.toISOString().split("T")[0]),o.setDate(o.getDate()+1);return a}))),n=o.filter((e=>!t.has(e))),a=n.length/o.length*100;return{employee:e,availableDays:n,totalDays:o.length,availabilityPercentage:a}}));d.sort(((e,t)=>t.availabilityPercentage-e.availabilityPercentage));const l=document.createElement("div");l.className="modal",l.innerHTML=`\n        <div class="modal-content wide-modal">\n            <div class="modal-header">\n                <h3>Employee Availability</h3>\n                <span class="close-modal">&times;</span>\n            </div>\n            <div class="modal-body">\n                <p><strong>Date Range:</strong> ${n.toLocaleDateString()} - ${a.toLocaleDateString()}</p>\n                <p><strong>Total Days:</strong> ${o.length}</p>\n                \n                <table class="assignments-table">\n                    <thead>\n                        <tr>\n                            <th>Employee</th>\n                            <th>Role</th>\n                            <th>Market</th>\n                            <th>Available Days</th>\n                            <th>Availability</th>\n                            <th>Details</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        ${d.map((({employee:e,availableDays:t,totalDays:n,availabilityPercentage:a})=>`\n                            <tr class="${100===a?"fully-available":0===a?"not-available":"partially-available"}">\n                                <td>${e.name}</td>\n                                <td>${e.role}</td>\n                                <td>${e.market}</td>\n                                <td>${t.length} of ${n} days</td>\n                                <td>\n                                    <div class="availability-bar">\n                                        <div class="availability-fill" style="width: ${a}%"></div>\n                                        <span>${Math.round(a)}%</span>\n                                    </div>\n                                </td>\n                                <td>\n                                    <button class="show-dates-btn" onclick="toggleAvailableDates(this)">Show Dates</button>\n                                    <div class="available-dates-detail hidden">\n                                        <h4>Available Dates:</h4>\n                                        ${t.map((e=>`<div class="date-item">${new Date(e+"T12:00:00").toLocaleDateString()}</div>`)).join("")}\n                                    </div>\n                                </td>\n                            </tr>\n                        `)).join("")}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    `,document.body.appendChild(l),l.style.display="flex";l.querySelector(".close-modal").addEventListener("click",(()=>l.remove())),l.addEventListener("click",(e=>{e.target===l&&l.remove()}))},window.clearSearch=function(){document.getElementById("searchEmployee").value="",document.getElementById("searchProject").value="",document.getElementById("searchMarket").value="",document.getElementById("searchStartDate").value="",document.getElementById("searchEndDate").value="",document.getElementById("searchEntryType").value="",window.renderCalendar()},window.setupEmployeeSearch=function(){const e=document.getElementById("employee"),t=document.getElementById("employee-search-results");e.addEventListener("input",(function(e){const n=e.target.value.toLowerCase();if(!n)return t.innerHTML="",void t.classList.remove("active");const a=Object.entries(window.employees).filter((([e,t])=>t.active&&(t.name.toLowerCase().includes(n)||t.role.toLowerCase().includes(n)||t.market.toLowerCase().includes(n)))).slice(0,5);a.length>0?(t.innerHTML=a.map((([e,t])=>`\n                    <div class="search-result-item" onclick="window.selectEmployee('${t.name}')">\n                        <div>${t.name}</div>\n                        <div class="employee-details">${t.role} - ${t.market}</div>\n                    </div>\n                `)).join(""),t.classList.add("active")):(t.innerHTML='<div class="search-result-item">No matching employees found</div>',t.classList.add("active"))})),document.addEventListener("click",(function(n){e.contains(n.target)||t.contains(n.target)||t.classList.remove("active")})),e.addEventListener("keydown",(function(e){"Enter"===e.key&&e.preventDefault()}))},window.selectEmployee=function(e){document.getElementById("employee").value=e,document.getElementById("employee-search-results").classList.remove("active")},window.setupSearchFields=function(){setupSearchField("employee",(()=>Object.values(window.employees).filter((e=>e.active)).map((e=>({id:e.name,name:e.name,details:`${e.role} - ${e.market}`}))))),setupSearchField("project",(()=>Object.entries(window.projects).map((([e,t])=>({id:e,name:t.name,details:`ID: ${e}`,searchTerms:`${e} ${t.name}`.toLowerCase()}))))),setupSearchField("market",(()=>window.markets.map((e=>({id:e.name,name:e.name,details:`Region: ${e.region}`})))))},window.selectSearchItem=function(e,t){const n=document.getElementById(`search${t.charAt(0).toUpperCase()+t.slice(1)}`),a=window.projects[e];n.value=a?a.name:e,document.getElementById(`${t}-search-results`).classList.remove("active")},window.showAssignmentDetails=function(e){const t=Object.values(window.employees).find((t=>t.name===e.employee)),n=window.projects[e.projectId]||{name:"Unknown Project",market:"N/A"},a=document.createElement("div");a.className="modal",a.style.display="flex";const o=new Date(e.startDate+"T12:00:00"),s=new Date(e.endDate+"T12:00:00"),d=Math.ceil((s-o)/864e5)+1;a.innerHTML=`\n        <div class="modal-content">\n            <div class="modal-header">\n                <h3>Assignment Details</h3>\n                <span class="close-modal">&times;</span>\n            </div>\n            <div class="modal-body">\n                <div class="details-grid">\n                    <div class="detail-group">\n                        <h4>Employee Details</h4>\n                        <p><strong>Name:</strong> ${t.name}</p>\n                        <p><strong>Role:</strong> ${t.role}</p>\n                        <p><strong>Market:</strong> ${t.market}</p>\n                        <p><strong>Email:</strong> ${t.email}</p>\n                    </div>\n                    \n                    <div class="detail-group">\n                        <h4>Project Details</h4>\n                        <p><strong>Project Name:</strong> ${n.name}</p>\n                        <p><strong>Project ID:</strong> ${e.projectId}</p>\n                        <p><strong>Market:</strong> ${n.market}</p>\n                        <p><strong>Estimated Days:</strong> ${n.days}</p>\n                    </div>\n                    \n                    <div class="detail-group">\n                        <h4>Assignment Details</h4>\n                        <p><strong>Date Range:</strong> ${o.toLocaleDateString()} - ${s.toLocaleDateString()}</p>\n                        <p><strong>Duration:</strong> ${d} days</p>\n                        <p><strong>Type:</strong> ${e.entryType}</p>\n                        <p><strong>Market PM:</strong> ${e.marketProjectManager}</p>\n                    </div>\n                </div>\n                \n                <div class="modal-actions">\n                    <button class="delete-btn" onclick="window.deleteAssignmentFromModal('${e.startDate}', '${e.endDate}', '${e.employee}', '${e.projectId}')">\n                        Delete Assignment\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,document.body.appendChild(a);a.querySelector(".close-modal").addEventListener("click",(()=>a.remove())),a.addEventListener("click",(e=>{e.target===a&&a.remove()}))},window.deleteAssignmentFromModal=function(e,t,n,a){if(confirm("Are you sure you want to delete this assignment?")){const o=window.scheduleData.findIndex((o=>o.startDate===e&&o.endDate===t&&o.employee===n&&o.projectId===a));-1!==o&&(window.scheduleData.splice(o,1),window.saveData(),window.renderCalendar(),document.querySelector(".modal").remove())}},window.toggleAvailableDates=function(e){const t=e.nextElementSibling;t.classList.contains("hidden")?(document.querySelectorAll(".available-dates-detail:not(.hidden)").forEach((e=>{e.classList.add("hidden"),e.previousElementSibling.textContent="Show Dates"})),t.classList.remove("hidden"),e.textContent="Hide Dates"):(t.classList.add("hidden"),e.textContent="Show Dates")},window.addEventListener("ptoColorChanged",(function(){window.renderCalendar()})),window.addEventListener("colorPreferenceChanged",(function(){window.renderCalendar()})),window.addEventListener("continuousBlocksChanged",(function(){window.renderCalendar()})),window.initializeMonthYearSelectors=function(){const e=document.getElementById("yearSelect"),t=document.getElementById("monthSelect"),n=(new Date).getFullYear();for(let t=n-10;t<=n+10;t++){const n=document.createElement("option");n.value=t,n.textContent=t,e.appendChild(n)}t.value=window.currentDate.getMonth(),e.value=window.currentDate.getFullYear()},window.changeMonth=function(){const e=parseInt(document.getElementById("monthSelect").value),t=parseInt(document.getElementById("yearSelect").value);window.currentDate=new Date(t,e,1),window.renderCalendar()};
